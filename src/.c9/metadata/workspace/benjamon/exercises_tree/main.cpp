{"changed":false,"filter":false,"title":"main.cpp","tooltip":"/benjamon/exercises_tree/main.cpp","value":"/*\n * main.cpp\n *\n *  Created on: 29/10/2015\n *      Author: pperezm\n */\n\n#include <iostream>\n#include <cstring>\n#include \"unit.h\"\n#include \"tree.h\"\n\nusing namespace std;\n\nclass TreeTest : public UnitTest {\npublic:\n\tvoid runTest() {\n\t\tUnitTest::total_test = 4;\n\t\tSimpleTree a(1), b(2), c(3), d(4);\n\t\t\n\t\t/* TEST 1 */\n\t\tcout << \"Test 1...\";\n\t\tASSERT_TRUE(a.isFull());\n\t\tASSERT_TRUE(b.isFull());\n\t\tASSERT_FALSE(c.isFull());\n\t\tASSERT_TRUE(d.isFull());\n\t\tstd::cout << \" PASSED.\\nTest 2...\";\n\t\t\n\t\t/* TEST 2 */\n\t\tASSERT_TRUE(3 == a.internalNodes());\n\t\tASSERT_TRUE(5 == b.internalNodes());\n\t\tASSERT_TRUE(5 == c.internalNodes());\n\t\tASSERT_TRUE(0 == d.internalNodes());\n\t\tstd::cout << \" PASSED.\\nTest 3...\";\n\t\t\n\t\t/* TEST 3 */\n\t\tASSERT_TRUE(a.isPerfect());\n\t\tASSERT_FALSE(b.isPerfect());\n\t\tASSERT_FALSE(c.isPerfect());\n\t\tASSERT_TRUE(d.isPerfect());\n\t\tstd::cout << \" PASSED.\\nTest 4...\";\n\t\t\n\t\t/* TEST 4 */\n\t\tASSERT_FALSE(a.isDegenerate());\n\t\tASSERT_FALSE(b.isDegenerate());\n\t\tASSERT_TRUE(c.isDegenerate());\n\t\tASSERT_FALSE(d.isDegenerate());\n\t\tstd::cout << \" PASSED.\\n\";\n\t}\n};\n\nint main(int argc, char* argv[]) {\n\tTreeTest test;\n\n\ttest.runTest();\n\tstd::cout << \"SUCESS!\\n\";\n\treturn 0;\n}\n\n\n","undoManager":{"mark":-1,"position":-1,"stack":[]},"ace":{"folds":[],"scrolltop":627.5,"scrollleft":0,"selection":{"start":{"row":6,"column":0},"end":{"row":12,"column":20},"isBackwards":true},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":38,"state":"start","mode":"ace/mode/c_cpp"}},"timestamp":1478926430000}